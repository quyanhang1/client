<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1、扫描包-->
    <context:component-scan base-package="com.jnshu.controller"/>
    <!--2、开启注释-->
    <context:annotation-config/>
    <!--3、适配器和映射器-->
    <mvc:annotation-driven/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:api.properties</value>
                <!--要是有多个配置文件，只需在这里继续添加即可 -->
            </list>
        </property>
    </bean>
<!--=====================显示图片，具体的再查=============================-->
    <mvc:default-servlet-handler/>
    <!--<mvc:resources location="/" mapping="/resources/**"/>-->

    <!--tiles配置文件-->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
        <property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory" />
    </bean>
    <!--tiles试图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
    </bean>


    <!--4、视图解析器-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/t10/imges/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
        <!--&lt;!&ndash;优先级，0最高，数越小优先级越大&ndash;&gt;-->
        <!--<property name="order" value="2"/>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/test1/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
        <!--&lt;!&ndash;优先级，0最高，数越小优先级越大&ndash;&gt;-->
        <!--<property name="order" value="1"/>-->
    <!--</bean>-->

    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->
    <!--<bean id="myAspect2" class="com.jnshu.aop.MyAop"/>-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="mypoint" expression="execution(* * ..UserController.*(..))"/>-->
        <!--<aop:aspect ref="myAspect2">-->
            <!--&lt;!&ndash;<aop:before method="before" pointcut-ref="mypoint"/>&ndash;&gt;-->
            <!--<aop:around method="around" pointcut-ref="mypoint"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <!--配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/u/*" />
            <bean class="com.jnshu.intercepter.LoginIntercepter"></bean>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>

    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="mappingJackson2HttpMessageConverter" />-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="mappingJackson2HttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>application/json;charset=UTF-8</value>-->
                <!--<value>text/html;charset=UTF-8</value>-->
                <!--<value>text/json;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

</beans>
